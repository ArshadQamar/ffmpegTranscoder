# Generated by Django 4.2 on 2025-10-10 11:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('transcoder', '0011_channel_pcr_pid_channel_pmt_pid'),
    ]

    operations = [
        migrations.AddField(
            model_name='channel',
            name='bitrate_mode',
            field=models.CharField(choices=[('cbr', 'CBR'), ('vbr', 'VBR')], default='vbr', max_length=5),
        ),
        migrations.AddField(
            model_name='channel',
            name='is_abr',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='channel',
            name='audio_bitrate',
            field=models.IntegerField(help_text='128k, 256k', validators=[django.core.validators.MinValueValidator(32000), django.core.validators.MaxValueValidator(256000)]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='audio_pid',
            field=models.IntegerField(default=102, help_text='Audio PID', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='buffer_size',
            field=models.IntegerField(help_text='4.8M,9.6M', validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000000)]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='input_file',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='channel',
            name='input_multicast_ip',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="Enter a valid multicast address like '239.x.x.x:port'. IP must be 224.0.0.0-239.255.255.255 and port between 1-60000.", regex='^(22[4-9]|23\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d):([1-9]\\d{0,3}|[1-5]\\d{4}|60000)$')]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='output_file',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='channel',
            name='output_multicast_ip',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="Enter a valid multicast address like '239.x.x.x:port'. IP must be 224.0.0.0-239.255.255.255 and port between 1-60000.", regex='^(22[4-9]|23\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d):([1-9]\\d{0,3}|[1-5]\\d{4}|60000)$')]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='pcr_pid',
            field=models.IntegerField(default=256, validators=[django.core.validators.MinValueValidator(32), django.core.validators.MaxValueValidator(8186)]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='pmt_pid',
            field=models.IntegerField(default=4096, validators=[django.core.validators.MinValueValidator(32), django.core.validators.MaxValueValidator(8186)]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='video_bitrate',
            field=models.IntegerField(help_text='2.4M, 4.8M', validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000000)]),
        ),
        migrations.AlterField(
            model_name='channel',
            name='video_codec',
            field=models.CharField(choices=[('libx264', 'H.264'), ('libx265', 'H.265'), ('mpeg2video', 'MPEG-2')], default='h264', max_length=50),
        ),
        migrations.AlterField(
            model_name='channel',
            name='video_pid',
            field=models.IntegerField(default=101, help_text='Video PID', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='transcodingjob',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('error', 'Error'), ('stopped', 'Stopped')], default='stopped', max_length=20),
        ),
        migrations.CreateModel(
            name='ABR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_type', models.CharField(choices=[('hls', 'hls'), ('rtmp', 'rtmp'), ('udp', 'udp'), ('file', 'file')], max_length=10)),
                ('output_url', models.CharField(blank=True, max_length=500, null=True)),
                ('output_multicast_ip', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="Enter a valid multicast address like '239.x.x.x:port'. IP must be 224.0.0.0-239.255.255.255 and port between 1-60000.", regex='^(22[4-9]|23\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d):([1-9]\\d{0,3}|[1-5]\\d{4}|60000)$')])),
                ('video_bitrate', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000000)])),
                ('audio_bitrate', models.IntegerField(validators=[django.core.validators.MinValueValidator(32000), django.core.validators.MaxValueValidator(256000)])),
                ('buffer_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000000)])),
                ('resolution', models.CharField(choices=[('1920x1080', '1080p (Full HD)'), ('1280x720', '720p (HD)'), ('1024x576', '576p (SD PAL 16:9)'), ('768x576', '576p (SD PAL 4:3)'), ('854x480', '480p (SD)'), ('640x360', '360p'), ('426x240', '240p')], max_length=10)),
                ('service_id', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999)])),
                ('video_pid', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('audio_pid', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('pmt_pid', models.IntegerField(validators=[django.core.validators.MinValueValidator(32), django.core.validators.MaxValueValidator(8186)])),
                ('pcr_pid', models.IntegerField(validators=[django.core.validators.MinValueValidator(32), django.core.validators.MaxValueValidator(8186)])),
                ('muxrate', models.IntegerField(validators=[django.core.validators.MinValueValidator(10000), django.core.validators.MaxValueValidator(50000000)])),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abr', to='transcoder.channel')),
            ],
        ),
    ]
